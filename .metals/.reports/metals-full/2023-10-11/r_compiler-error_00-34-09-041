java.util.NoSuchElementException: head of empty list
occurred in the presentation compiler.

action parameters:
offset: 304
uri: file:///C:/vs%20code/Scala/PA%201/src/main/scala/ass1/Tree.scala
text:
package ass1

import scala.collection.View.Empty

enum Tree[K, V] extends TreeInterface[K, V]:
  private case Leaf(key: K, payload: V)
  private case Node(key: K, children: List[Tree[K, V]])

  import Tree.Path

  def contains(path: Path[K]): Boolean = 
    def find_path(curr:Tree[K, V], path:List[K, V]@@)=
      curr match {
        case Node(key, children) => 
        case Leaf(key, payload) =>
        case _ => false
      }
    

  def get(path: Path[K]): Option[Either[List[K], V]] = 
    if !contains(path) then None
    else {
      var currnode = this //root node
      def find_lnode(curr:Tree[K, V], path:List[K]):Tree[K, V]=
        curr match {
          case Node(key, children) => 
            if !path.isEmpty then 
              find_lnode(children.find(path.head==_.key).getOrElse(Tree.apply(path.head)), path.tail)
            else currnode=Node(key, children)
            currnode
          case Leaf(key, payload) => 
            currnode=Leaf(key, payload)
            currnode
        }
      find_lnode(currnode, path.segs)
      currnode match {
        case Node(key, child) => 
          val ls = child.map(_.key)
          Some(Left(ls))
        case Leaf(_, payload) => Some(Right(payload))
      }
    }

  def flatten: List[(Path[K], V)] = ???
  //   this match {
  //   case Nil => Nil
  //   case singlepath => singlepath
  //   case _ => flatten(Left(this)) ++ flatten(Right(this))
  // }


  def updated(path: Path[K]): Tree[K, V] = ???

  def updated(path: Path[K], payload: V): Tree[K, V] = ???

object Tree extends TreeComp:
  def apply[K, V](key: K): Tree[K, V] = Node(key, Nil)

  def apply[K, V](path: Path[K]): Tree[K, V] = path match
    case Path(Nil) => throw IllegalPathException
    case _ => 
      def listToNode[K](list: List[K]): Tree[K, V] = {
        list.foldRight[Tree[K, V]](Node(list.last, Nil)) {
          case (item, acc) => Node(item, List(acc))
        }
      }
      listToNode(path.segs)

  def apply[K, V](path: Path[K], payload: V): Tree[K, V] = path match
    case Path(Nil) => throw IllegalPathException
    case _ => 
      def listToNode[K](list: List[K]): Tree[K, V] = {
        list.foldRight[Tree[K, V]](Leaf(list.last, payload)) {
          case (item, acc) => Node(item, List(acc))
        }
      }
      listToNode(path.segs)



error stacktrace:
scala.collection.immutable.Nil$.head(List.scala:662)
	scala.collection.immutable.Nil$.head(List.scala:661)
	dotty.tools.dotc.core.TypeOps$.intersect$1(TypeOps.scala:211)
	dotty.tools.dotc.core.TypeOps$.$anonfun$3(TypeOps.scala:345)
	dotty.tools.dotc.core.Types$Type.mapReduceOr(Types.scala:476)
	dotty.tools.dotc.core.TypeOps$.approximateOr$1(TypeOps.scala:345)
	dotty.tools.dotc.core.TypeOps$.orDominator(TypeOps.scala:359)
	dotty.tools.dotc.core.Types$OrType.join(Types.scala:3261)
	dotty.tools.dotc.core.Types$OrType.widenUnionWithoutNull(Types.scala:3277)
	dotty.tools.dotc.core.Types$Type.widenUnion(Types.scala:1293)
	dotty.tools.dotc.core.ConstraintHandling.widenOr$1(ConstraintHandling.scala:530)
	dotty.tools.dotc.core.ConstraintHandling.widenInferred(ConstraintHandling.scala:543)
	dotty.tools.dotc.core.ConstraintHandling.widenInferred$(ConstraintHandling.scala:27)
	dotty.tools.dotc.core.TypeComparer.widenInferred(TypeComparer.scala:30)
	dotty.tools.dotc.core.TypeComparer$.widenInferred(TypeComparer.scala:2825)
	dotty.tools.dotc.typer.Namer.rhsType$1(Namer.scala:1753)
	dotty.tools.dotc.typer.Namer.cookedRhsType$1(Namer.scala:1759)
	dotty.tools.dotc.typer.Namer.lhsType$1(Namer.scala:1760)
	dotty.tools.dotc.typer.Namer.inferredResultType(Namer.scala:1771)
	dotty.tools.dotc.typer.Namer.inferredType$1(Namer.scala:1519)
	dotty.tools.dotc.typer.Namer.valOrDefDefSig(Namer.scala:1526)
	dotty.tools.dotc.typer.Namer.defDefSig(Namer.scala:1611)
	dotty.tools.dotc.typer.Namer$Completer.typeSig(Namer.scala:785)
	dotty.tools.dotc.typer.Namer$Completer.completeInCreationContext(Namer.scala:920)
	dotty.tools.dotc.typer.Namer$Completer.complete(Namer.scala:808)
	dotty.tools.dotc.core.SymDenotations$SymDenotation.completeFrom(SymDenotations.scala:167)
	dotty.tools.dotc.core.Denotations$Denotation.completeInfo$1(Denotations.scala:187)
	dotty.tools.dotc.core.Denotations$Denotation.info(Denotations.scala:189)
	dotty.tools.dotc.core.SymDenotations$SymDenotation.ensureCompleted(SymDenotations.scala:369)
	dotty.tools.dotc.typer.Typer.retrieveSym(Typer.scala:2773)
	dotty.tools.dotc.typer.Typer.typedNamed$1(Typer.scala:2798)
	dotty.tools.dotc.typer.Typer.typedUnadapted(Typer.scala:2894)
	dotty.tools.dotc.typer.Typer.typed(Typer.scala:2960)
	dotty.tools.dotc.typer.Typer.typed(Typer.scala:2964)
	dotty.tools.dotc.typer.Typer.traverse$1(Typer.scala:2986)
	dotty.tools.dotc.typer.Typer.typedStats(Typer.scala:3036)
	dotty.tools.dotc.typer.Typer.typedBlockStats(Typer.scala:1067)
	dotty.tools.dotc.typer.Typer.typedBlock(Typer.scala:1071)
	dotty.tools.dotc.typer.Typer.typedUnnamed$1(Typer.scala:2840)
	dotty.tools.dotc.typer.Typer.typedUnadapted(Typer.scala:2895)
	dotty.tools.dotc.typer.Typer.typed(Typer.scala:2960)
	dotty.tools.dotc.typer.Typer.typed(Typer.scala:2964)
	dotty.tools.dotc.typer.Typer.typedExpr(Typer.scala:3080)
	dotty.tools.dotc.typer.Typer.$anonfun$47(Typer.scala:2278)
	dotty.tools.dotc.typer.PrepareInlineable$.dropInlineIfError(PrepareInlineable.scala:248)
	dotty.tools.dotc.typer.Typer.typedDefDef(Typer.scala:2278)
	dotty.tools.dotc.typer.Typer.typedNamed$1(Typer.scala:2808)
	dotty.tools.dotc.typer.Typer.typedUnadapted(Typer.scala:2894)
	dotty.tools.dotc.typer.Typer.typed(Typer.scala:2960)
	dotty.tools.dotc.typer.Typer.typed(Typer.scala:2964)
	dotty.tools.dotc.typer.Typer.traverse$1(Typer.scala:2986)
	dotty.tools.dotc.typer.Typer.typedStats(Typer.scala:3036)
	dotty.tools.dotc.typer.Typer.typedClassDef(Typer.scala:2476)
	dotty.tools.dotc.typer.Typer.typedTypeOrClassDef$1(Typer.scala:2820)
	dotty.tools.dotc.typer.Typer.typedNamed$1(Typer.scala:2824)
	dotty.tools.dotc.typer.Typer.typedUnadapted(Typer.scala:2894)
	dotty.tools.dotc.typer.Typer.typed(Typer.scala:2960)
	dotty.tools.dotc.typer.Typer.typed(Typer.scala:2964)
	dotty.tools.dotc.typer.Typer.traverse$1(Typer.scala:2986)
	dotty.tools.dotc.typer.Typer.typedStats(Typer.scala:3036)
	dotty.tools.dotc.typer.Typer.typedPackageDef(Typer.scala:2603)
	dotty.tools.dotc.typer.Typer.typedUnnamed$1(Typer.scala:2865)
	dotty.tools.dotc.typer.Typer.typedUnadapted(Typer.scala:2895)
	dotty.tools.dotc.typer.Typer.typed(Typer.scala:2960)
	dotty.tools.dotc.typer.Typer.typed(Typer.scala:2964)
	dotty.tools.dotc.typer.Typer.typedExpr(Typer.scala:3080)
	dotty.tools.dotc.typer.TyperPhase.typeCheck$$anonfun$1(TyperPhase.scala:43)
	dotty.tools.dotc.typer.TyperPhase.typeCheck$$anonfun$adapted$1(TyperPhase.scala:50)
	scala.Function0.apply$mcV$sp(Function0.scala:39)
	dotty.tools.dotc.core.Phases$Phase.monitor(Phases.scala:414)
	dotty.tools.dotc.typer.TyperPhase.typeCheck(TyperPhase.scala:50)
	dotty.tools.dotc.typer.TyperPhase.runOn$$anonfun$3(TyperPhase.scala:84)
	scala.runtime.function.JProcedure1.apply(JProcedure1.java:15)
	scala.runtime.function.JProcedure1.apply(JProcedure1.java:10)
	scala.collection.immutable.List.foreach(List.scala:333)
	dotty.tools.dotc.typer.TyperPhase.runOn(TyperPhase.scala:84)
	dotty.tools.dotc.Run.runPhases$1$$anonfun$1(Run.scala:225)
	scala.runtime.function.JProcedure1.apply(JProcedure1.java:15)
	scala.runtime.function.JProcedure1.apply(JProcedure1.java:10)
	scala.collection.ArrayOps$.foreach$extension(ArrayOps.scala:1328)
	dotty.tools.dotc.Run.runPhases$1(Run.scala:236)
	dotty.tools.dotc.Run.compileUnits$$anonfun$1(Run.scala:244)
	dotty.tools.dotc.Run.compileUnits$$anonfun$adapted$1(Run.scala:253)
	dotty.tools.dotc.util.Stats$.maybeMonitored(Stats.scala:68)
	dotty.tools.dotc.Run.compileUnits(Run.scala:253)
	dotty.tools.dotc.Run.compileSources(Run.scala:186)
	dotty.tools.dotc.interactive.InteractiveDriver.run(InteractiveDriver.scala:165)
	scala.meta.internal.pc.MetalsDriver.run(MetalsDriver.scala:45)
	scala.meta.internal.pc.HoverProvider$.hover(HoverProvider.scala:34)
	scala.meta.internal.pc.ScalaPresentationCompiler.hover$$anonfun$1(ScalaPresentationCompiler.scala:325)
